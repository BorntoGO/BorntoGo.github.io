###概要
AirSync协议就是微信的蓝牙外设协议.


http://iot.weixin.qq.com/doc/blue/%E5%BE%AE%E4%BF%A1%E8%93%9D%E7%89%99%E5%A4%96%E8%AE%BE%E5%8D%8F%E8%AE%AE1.0.4.pdf


该协议规定了蓝牙设备和手机端微信的通信规范.

整体架构是: 外设 <-> 手机微信 <-> 微信服务器 <-> 厂商服务器

功能 :实现了设备和厂商服务器间的通信.

###BLE设备模拟成流
流的优势是无长度限制,双工.微信规定经典蓝牙使用RFCOMM通信,BLE(Bluetooth Low Energy)设备需要先模拟成流(Stream).

为了实现流模式,定义了以下规范:

设备暴露两个特征值:Write值,Indication值.

设备从Write特征值接收数据,从Indication特征值发送数据.

Indication特征值类型为bytes.此处约定一个特征值的一次传输为一帧.

#####蓝牙设备写过程

1.
分帧: 假如一帧长度为20字节,则1024bytes的数据需要1024/20个帧,其中末尾不足一帧时填0补齐.
2.
发送第一帧: 把第一帧内容放入特征值,通知手机读数据(此处使用带响应的通知Indication),响应完成时,认为手机已经读完数据,即完成了第一帧的发送.
3.
重复2,发送剩下的帧.

#####蓝牙设备读过程
设备发现特征值收到数据时,接收数据并追加到buffer.

###**协议**
####**前提**
厂商需开通公众平台硬件号功能.
####**设备和广播**
为了和微信能够通信，设备的广播包需符合以下格式：
######**BLE设备需要广播**：
a.
微信规定的service uuid
b.
厂商自定义字段里，包含MAC地址
c.
包含指定的Characteristics

######Andriod经典蓝牙设备需要广播：
a.
暴露一个指定uuid的rfcomm服务。
b.
厂商自定义字段里，包含MAC地址

Ios经典蓝牙需要通过mfi认证，并且SerialNumber需为字符串形式MAC地址。

设备分为可确认(交互)设备和无法确认设备.相应的广播包分为确认包和普通包.(?就是确认包为可确认设备独占)


###绑定
####用户扫码绑定
####厂商服务器绑定
可通过微信JSAPI绑定厂商指定的用户和设备.

####扫码和连接
设备按规范广播,手机端微信扫描到后连接设备.

####流
经典蓝牙使用RFCOMM通信,BLE设备要先模拟成流.
####包
流上运载的业务逻辑数据包.

把设备->厂商服务器/微信服务器的请求称为Req(uest)，回包称为Resp(ond).一一对应.
把厂商服务器/微信服务器->设备的请求称为PushReq,无回包.


#####包结构
由(定长)包头和(变长)包体组成.

####身份验证

######加密:
加密算法选用AES128.

步骤:

a.
设备烧一个唯一的key,微信服务器记录下来.

b.
服务器通过Auth命令使用key,把sessionKey发给设备.(设备发送AuthReq,微信回AuthResp)

c.
设备和手机之间通过SessionKey加解密(变长部分).

######不加密:
1.
MD5(deviceType+deviceID)认证.

2.
MAC认证

####会话约定
a.
设备连接微信后,发送AuthReq,收到成功回包后发送InitReq,收到成功回报后,可以发送数据.
b.
解包异常时断开(?任何一方异常皆断开?)
c.
Push包seq为0,Req/Resp包不为0.
d.
服务器可随时Push.
e.
Push无回包,厂商可自行实现.

####Read Characteristics
为保证手机在已连接一个设备后还能搜索连接其他设备,设备需要暴露一个6字节的MAC地址作为read character.(?此处理解不知道是否正确?)

#####Google ProtoBuf协议
google提供的协议,通过把c/c++的struct打包成二机制数据,或者相反.实现轻便高效的结构化数据存储.

AirSyn包体部分使用此协议.

#####JSAPI
在微信app内的网页通过js对设备操作的接口.
跳过了微信服务器,从而更快速.
设备<->微信app<->厂商html<->厂商server










